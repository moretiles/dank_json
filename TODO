Progress map

Core functionality
* Remove deprecated (unused functions, argv style function calls).
* Split into public and private header
    * Define jsonLiteral JSON_TRUE, JSON_FALSE inside the private header. Mark them as extern within the public header.
* Handle memory leaks for jsonCreate family
* Define proper jsonClose function to close file and terminate associated nodes.
* Define better ways of building than _KEY and _INDEX.
* Give structs better names in the public interface.
* Create public and private header files.

Nice to have:
* Make sure JSON dictionaries are sorted in the same order as input. (can use the existing prev and next pointers).
* Use wchar_t for strings to properly handle 2 byte escapes (like \xabcd).
* Use prev and next to connect together active nodes in a dictionary (saving deallocation time).

Maybe:
* Make sure we allocate dictionaries using a pool.
* Use global zero initialized node to populate initial dictionary so we only "waste" memory on pointers, not nodes
